// generated 2007/7/20 17:32:18 EDT by rmh3093@Redman.brcg.net
// using glademm V2.6.0
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- /home/rmh3093/ruckus/ruckus.glade
// for gtk 2.10.13 and gtkmm 2.10.9
//
// Please modify the corresponding derived classes in ./src/main_window.cc


#if defined __GNUC__ && __GNUC__ < 3
#error This program will crash if compiled with g++ 2.x
// see the dynamic_cast bug in the gtkmm FAQ
#endif //
#include "config.h"
#include <gtkmmconfig.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#include <sigc++/compatibility.h>
#define GMM_GTKMM_22_24(a,b) b
#else //gtkmm 2.2
#define GMM_GTKMM_22_24(a,b) a
#endif //
#include "main_window_glade.hh"
#include <gdk/gdkkeysyms.h>
#include <gtkmm/accelgroup.h>
#include <gtkmm/adjustment.h>

main_window_glade::main_window_glade(
) : Gtk::Window(Gtk::WINDOW_TOPLEVEL)
{  main_window = this;
   gmm_data = new GlademmData(get_accel_group());
   play_time = Gtk::manage(new class Gtk::Label("<b>play_time</b>"));
   alignment10 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 1, 1));
   frame2 = Gtk::manage(new class Gtk::Frame());
   eventbox1 = Gtk::manage(new class Gtk::EventBox());
   song_title = Gtk::manage(new class Gtk::Label("<span font_desc=\"20\" ><b>Song Title</b></span>"));
   artist_album = Gtk::manage(new class Gtk::Label("Artist - Artist"));
   vbox3 = Gtk::manage(new class Gtk::VBox(false, 0));
   song_info_eventbox = Gtk::manage(new class Gtk::EventBox());
   alignment11 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 1, 1));
   frame3 = Gtk::manage(new class Gtk::Frame());
   hbox16 = Gtk::manage(new class Gtk::HBox(false, 0));
   hbox2 = Gtk::manage(new class Gtk::HBox(false, 0));
   vbox4 = Gtk::manage(new class Gtk::VBox(false, 0));
   drawingarea4 = Gtk::manage(new class Gtk::DrawingArea());
   
   Gtk::Adjustment *progressbar_adj = Gtk::manage(new class Gtk::Adjustment(50, 0, 100, 0, 0, 0));
   progressbar = Gtk::manage(new class Gtk::HScale(*progressbar_adj));
   drawingarea5 = Gtk::manage(new class Gtk::DrawingArea());
   hbox17 = Gtk::manage(new class Gtk::HBox(false, 0));
   vbox7 = Gtk::manage(new class Gtk::VBox(false, 0));
   drawingarea2 = Gtk::manage(new class Gtk::DrawingArea());
   progressbar1 = Gtk::manage(new class Gtk::ProgressBar());
   drawingarea3 = Gtk::manage(new class Gtk::DrawingArea());
   vbox6 = Gtk::manage(new class Gtk::VBox(false, 0));
   button_vol_up = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-go-up")));
   button_vol_down = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-go-down")));
   vbox5 = Gtk::manage(new class Gtk::VBox(true, 0));
   hbox15 = Gtk::manage(new class Gtk::HBox(false, 0));
   hbox14 = Gtk::manage(new class Gtk::HBox(false, 0));
   alignment13 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 1, 1));
   frame33 = Gtk::manage(new class Gtk::Frame());
   button_previous = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-media-previous")));
   button_rewind = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-media-rewind")));
   button_play_pause = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-media-play")));
   button_forward = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-media-forward")));
   button_next = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-media-next")));
   hbox12 = Gtk::manage(new class Gtk::HBox(false, 0));
   vbox1 = Gtk::manage(new class Gtk::VBox(false, 0));
   player_label = Gtk::manage(new class Gtk::Label("<span font_desc=\"14\" >Player</span>"));
   treeview1 = Gtk::manage(new class Gtk::TreeView());
   scrolledwindow1 = Gtk::manage(new class Gtk::ScrolledWindow());
   playlist_label = Gtk::manage(new class Gtk::Label("<span font_desc=\"14\" >Playlist</span>"));
   treeview2 = Gtk::manage(new class Gtk::TreeView());
   scrolledwindow2 = Gtk::manage(new class Gtk::ScrolledWindow());
   albums_label = Gtk::manage(new class Gtk::Label("<span font_desc=\"14\" >Albums</span>"));
   treeview3 = Gtk::manage(new class Gtk::TreeView());
   scrolledwindow3 = Gtk::manage(new class Gtk::ScrolledWindow());
   artists_label = Gtk::manage(new class Gtk::Label("<span font_desc=\"14\">Artists</span>"));
   image1 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-fullscreen"), Gtk::IconSize(4)));
   fullscreen_togglebutton_label = Gtk::manage(new class Gtk::Label("Fullscreen"));
   hbox1 = Gtk::manage(new class Gtk::HBox(false, 2));
   alignment5 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 0, 0));
   fullscreen_button = Gtk::manage(new class Gtk::ToggleButton());
   image11 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-close"), Gtk::IconSize(4)));
   label1 = Gtk::manage(new class Gtk::Label("Quit"));
   hbox11 = Gtk::manage(new class Gtk::HBox(false, 2));
   alignment12 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 0, 0));
   quit_button = Gtk::manage(new class Gtk::Button());
   vbox2 = Gtk::manage(new class Gtk::VBox(false, 0));
   settings_label = Gtk::manage(new class Gtk::Label("<span font_desc=\"14\" >Settings</span>"));
   notebook1 = Gtk::manage(new class Gtk::Notebook());
   play_time->set_size_request(71,-1);
   play_time->set_alignment(0.5,0.5);
   play_time->set_padding(0,0);
   play_time->set_justify(Gtk::JUSTIFY_LEFT);
   play_time->set_line_wrap(false);
   play_time->set_use_markup(true);
   play_time->set_selectable(false);
   alignment10->set_size_request(80,1);
   alignment10->add(*play_time);
   frame2->set_size_request(80,1);
   frame2->set_border_width(15);
   frame2->set_shadow_type(Gtk::SHADOW_IN);
   frame2->set_label_align(0,0.5);
   frame2->add(*alignment10);
   eventbox1->set_size_request(200,-1);
   eventbox1->add(*frame2);
   song_title->set_alignment(0.5,0.5);
   song_title->set_padding(0,10);
   song_title->set_justify(Gtk::JUSTIFY_LEFT);
   song_title->set_line_wrap(false);
   song_title->set_use_markup(true);
   song_title->set_selectable(false);
   artist_album->set_alignment(0.5,0.5);
   artist_album->set_padding(0,10);
   artist_album->set_justify(Gtk::JUSTIFY_LEFT);
   artist_album->set_line_wrap(false);
   artist_album->set_use_markup(true);
   artist_album->set_selectable(false);
   vbox3->pack_start(*song_title, Gtk::PACK_SHRINK, 0);
   vbox3->pack_start(*artist_album, Gtk::PACK_SHRINK, 0);
   song_info_eventbox->add(*vbox3);
   alignment11->add(*song_info_eventbox);
   frame3->set_border_width(15);
   frame3->set_shadow_type(Gtk::SHADOW_IN);
   frame3->set_label_align(0,0.5);
   frame3->add(*alignment11);
   hbox16->pack_start(*eventbox1, Gtk::PACK_SHRINK, 0);
   hbox16->pack_start(*frame3);
   hbox2->set_size_request(-1,160);
   hbox2->pack_start(*hbox16, Gtk::PACK_EXPAND_WIDGET, 15);
   vbox4->set_size_request(-1,160);
   vbox4->pack_start(*hbox2);
   drawingarea4->set_size_request(30,-1);
   progressbar->set_size_request(-1,60);
   progressbar->set_flags(Gtk::CAN_FOCUS);
   progressbar->set_update_policy(Gtk::UPDATE_CONTINUOUS);
   progressbar->set_inverted(false);
   progressbar->set_digits(2);
   progressbar->set_draw_value(false);
   progressbar->set_value_pos(Gtk::POS_LEFT);
   drawingarea5->set_size_request(30,-1);
   hbox17->pack_start(*drawingarea4, Gtk::PACK_SHRINK, 0);
   hbox17->pack_start(*progressbar);
   hbox17->pack_start(*drawingarea5, Gtk::PACK_SHRINK, 0);
   vbox7->pack_start(*vbox4);
   vbox7->pack_start(*hbox17);
   drawingarea2->set_size_request(-1,15);
   progressbar1->set_size_request(60,-1);
   drawingarea3->set_size_request(-1,15);
   vbox6->pack_start(*drawingarea2, Gtk::PACK_SHRINK, 0);
   vbox6->pack_start(*progressbar1);
   vbox6->pack_start(*drawingarea3, Gtk::PACK_SHRINK, 0);
   button_vol_up->set_size_request(120,80);
   button_vol_up->set_flags(Gtk::CAN_FOCUS);
   button_vol_up->set_border_width(15);
   button_vol_up->set_relief(Gtk::RELIEF_NORMAL);
   button_vol_down->set_size_request(120,80);
   button_vol_down->set_flags(Gtk::CAN_FOCUS);
   button_vol_down->set_border_width(15);
   button_vol_down->set_relief(Gtk::RELIEF_NORMAL);
   vbox5->set_size_request(120,-1);
   vbox5->pack_start(*button_vol_up, Gtk::PACK_SHRINK, 0);
   vbox5->pack_start(*button_vol_down, Gtk::PACK_SHRINK, 0);
   hbox15->pack_start(*vbox6, Gtk::PACK_SHRINK, 0);
   hbox15->pack_start(*vbox5);
   hbox14->pack_start(*vbox7);
   hbox14->pack_start(*hbox15, Gtk::PACK_SHRINK, 0);
   alignment13->add(*hbox14);
   frame33->set_shadow_type(Gtk::SHADOW_OUT);
   frame33->set_label_align(0,0.5);
   frame33->add(*alignment13);
   button_previous->set_size_request(120,-1);
   button_previous->set_border_width(15);
   button_previous->set_relief(Gtk::RELIEF_NORMAL);
   button_rewind->set_size_request(120,-1);
   button_rewind->set_border_width(15);
   button_rewind->set_relief(Gtk::RELIEF_NORMAL);
   button_play_pause->set_size_request(120,-1);
   button_play_pause->set_border_width(15);
   button_play_pause->set_relief(Gtk::RELIEF_NORMAL);
   button_forward->set_size_request(120,-1);
   button_forward->set_border_width(15);
   button_forward->set_relief(Gtk::RELIEF_NORMAL);
   button_next->set_size_request(120,-1);
   button_next->set_border_width(15);
   button_next->set_relief(Gtk::RELIEF_NORMAL);
   hbox12->set_size_request(-1,120);
   hbox12->pack_start(*button_previous);
   hbox12->pack_start(*button_rewind);
   hbox12->pack_start(*button_play_pause);
   hbox12->pack_start(*button_forward);
   hbox12->pack_start(*button_next);
   vbox1->pack_start(*frame33, Gtk::PACK_SHRINK, 0);
   vbox1->pack_start(*hbox12, Gtk::PACK_EXPAND_PADDING, 0);
   player_label->set_alignment(0.5,0.5);
   player_label->set_padding(0,10);
   player_label->set_justify(Gtk::JUSTIFY_LEFT);
   player_label->set_line_wrap(false);
   player_label->set_use_markup(true);
   player_label->set_selectable(false);
   treeview1->set_flags(Gtk::CAN_FOCUS);
   treeview1->set_headers_visible(true);
   treeview1->set_rules_hint(false);
   treeview1->set_reorderable(false);
   treeview1->set_enable_search(true);
   scrolledwindow1->set_flags(Gtk::CAN_FOCUS);
   scrolledwindow1->set_shadow_type(Gtk::SHADOW_IN);
   scrolledwindow1->set_policy(Gtk::POLICY_ALWAYS, Gtk::POLICY_ALWAYS);
   scrolledwindow1->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow1->add(*treeview1);
   playlist_label->set_alignment(0.5,0.5);
   playlist_label->set_padding(0,10);
   playlist_label->set_justify(Gtk::JUSTIFY_LEFT);
   playlist_label->set_line_wrap(false);
   playlist_label->set_use_markup(true);
   playlist_label->set_selectable(false);
   treeview2->set_flags(Gtk::CAN_FOCUS);
   treeview2->set_headers_visible(true);
   treeview2->set_rules_hint(false);
   treeview2->set_reorderable(false);
   treeview2->set_enable_search(true);
   scrolledwindow2->set_flags(Gtk::CAN_FOCUS);
   scrolledwindow2->set_shadow_type(Gtk::SHADOW_IN);
   scrolledwindow2->set_policy(Gtk::POLICY_ALWAYS, Gtk::POLICY_ALWAYS);
   scrolledwindow2->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow2->add(*treeview2);
   albums_label->set_alignment(0.5,0.5);
   albums_label->set_padding(0,10);
   albums_label->set_justify(Gtk::JUSTIFY_LEFT);
   albums_label->set_line_wrap(false);
   albums_label->set_use_markup(true);
   albums_label->set_selectable(false);
   treeview3->set_flags(Gtk::CAN_FOCUS);
   treeview3->set_headers_visible(true);
   treeview3->set_rules_hint(false);
   treeview3->set_reorderable(false);
   treeview3->set_enable_search(true);
   scrolledwindow3->set_flags(Gtk::CAN_FOCUS);
   scrolledwindow3->set_shadow_type(Gtk::SHADOW_IN);
   scrolledwindow3->set_policy(Gtk::POLICY_ALWAYS, Gtk::POLICY_ALWAYS);
   scrolledwindow3->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow3->add(*treeview3);
   artists_label->set_alignment(0.5,0.5);
   artists_label->set_padding(0,10);
   artists_label->set_justify(Gtk::JUSTIFY_LEFT);
   artists_label->set_line_wrap(false);
   artists_label->set_use_markup(true);
   artists_label->set_selectable(false);
   image1->set_alignment(0.5,0.5);
   image1->set_padding(0,0);
   fullscreen_togglebutton_label->set_alignment(0.5,0.5);
   fullscreen_togglebutton_label->set_padding(0,0);
   fullscreen_togglebutton_label->set_justify(Gtk::JUSTIFY_LEFT);
   fullscreen_togglebutton_label->set_line_wrap(false);
   fullscreen_togglebutton_label->set_use_markup(false);
   fullscreen_togglebutton_label->set_selectable(false);
   hbox1->pack_start(*image1, Gtk::PACK_SHRINK, 0);
   hbox1->pack_start(*fullscreen_togglebutton_label, Gtk::PACK_SHRINK, 0);
   alignment5->set_border_width(20);
   alignment5->add(*hbox1);
   fullscreen_button->set_size_request(-1,70);
   fullscreen_button->set_flags(Gtk::CAN_FOCUS);
   fullscreen_button->set_relief(Gtk::RELIEF_NORMAL);
   fullscreen_button->set_active(false);
   fullscreen_button->add(*alignment5);
   image11->set_alignment(0.5,0.5);
   image11->set_padding(0,0);
   label1->set_alignment(0.5,0.5);
   label1->set_padding(0,0);
   label1->set_justify(Gtk::JUSTIFY_LEFT);
   label1->set_line_wrap(false);
   label1->set_use_markup(false);
   label1->set_selectable(false);
   hbox11->pack_start(*image11, Gtk::PACK_SHRINK, 0);
   hbox11->pack_start(*label1, Gtk::PACK_SHRINK, 0);
   alignment12->add(*hbox11);
   quit_button->set_size_request(-1,70);
   quit_button->set_flags(Gtk::CAN_FOCUS);
   quit_button->set_relief(Gtk::RELIEF_NORMAL);
   quit_button->add(*alignment12);
   vbox2->set_border_width(20);
   vbox2->pack_start(*fullscreen_button, Gtk::PACK_SHRINK, 0);
   vbox2->pack_start(*quit_button, Gtk::PACK_SHRINK, 30);
   settings_label->set_alignment(0.5,0.5);
   settings_label->set_padding(0,10);
   settings_label->set_justify(Gtk::JUSTIFY_LEFT);
   settings_label->set_line_wrap(false);
   settings_label->set_use_markup(true);
   settings_label->set_selectable(false);
   notebook1->set_show_tabs(true);
   notebook1->set_show_border(true);
   notebook1->set_tab_pos(Gtk::POS_LEFT);
   notebook1->set_scrollable(false);
   notebook1->append_page(*vbox1, *player_label);
   notebook1->pages().back().set_tab_label_packing(true, true, Gtk::PACK_START);
   notebook1->append_page(*scrolledwindow1, *playlist_label);
   notebook1->pages().back().set_tab_label_packing(true, true, Gtk::PACK_START);
   notebook1->append_page(*scrolledwindow2, *albums_label);
   notebook1->pages().back().set_tab_label_packing(true, true, Gtk::PACK_START);
   notebook1->append_page(*scrolledwindow3, *artists_label);
   notebook1->pages().back().set_tab_label_packing(true, true, Gtk::PACK_START);
   notebook1->append_page(*vbox2, *settings_label);
   notebook1->pages().back().set_tab_label_packing(true, true, Gtk::PACK_START);
   notebook1->pages().back().set_menu_label_text("");
   main_window->set_size_request(800,480);
   main_window->set_flags(Gtk::CAN_FOCUS);
   main_window->grab_focus();
   main_window->set_title("Ruckus");
   main_window->set_modal(false);
   main_window->property_window_position().set_value(Gtk::WIN_POS_NONE);
   main_window->set_resizable(true);
   main_window->property_destroy_with_parent().set_value(false);
   main_window->add(*notebook1);
   play_time->show();
   alignment10->show();
   frame2->show();
   eventbox1->show();
   song_title->show();
   artist_album->show();
   vbox3->show();
   song_info_eventbox->show();
   alignment11->show();
   frame3->show();
   hbox16->show();
   hbox2->show();
   vbox4->show();
   drawingarea4->show();
   progressbar->show();
   drawingarea5->show();
   hbox17->show();
   vbox7->show();
   drawingarea2->show();
   progressbar1->show();
   drawingarea3->show();
   vbox6->show();
   button_vol_up->show();
   button_vol_down->show();
   vbox5->show();
   hbox15->show();
   hbox14->show();
   alignment13->show();
   frame33->show();
   button_previous->show();
   button_rewind->show();
   button_play_pause->show();
   button_forward->show();
   button_next->show();
   hbox12->show();
   vbox1->show();
   player_label->show();
   treeview1->show();
   scrolledwindow1->show();
   playlist_label->show();
   treeview2->show();
   scrolledwindow2->show();
   albums_label->show();
   treeview3->show();
   scrolledwindow3->show();
   artists_label->show();
   image1->show();
   fullscreen_togglebutton_label->show();
   hbox1->show();
   alignment5->show();
   fullscreen_button->show();
   image11->show();
   label1->show();
   hbox11->show();
   alignment12->show();
   quit_button->show();
   vbox2->show();
   settings_label->show();
   notebook1->show();
   main_window->show();
   progressbar->signal_button_release_event().connect(SigC::slot(*this, &main_window_glade::on_progressbar_button_release_event), false);
   progressbar->signal_button_press_event().connect(SigC::slot(*this, &main_window_glade::on_progressbar_button_press_event), false);
   button_previous->signal_clicked().connect(SigC::slot(*this, &main_window_glade::on_button_previous_clicked), false);
   button_rewind->signal_clicked().connect(SigC::slot(*this, &main_window_glade::on_button_rewind_clicked), false);
   button_play_pause->signal_clicked().connect(SigC::slot(*this, &main_window_glade::on_button_play_pause_clicked), false);
   button_forward->signal_clicked().connect(SigC::slot(*this, &main_window_glade::on_button_forward_clicked), false);
   button_next->signal_clicked().connect(SigC::slot(*this, &main_window_glade::on_button_next_clicked), false);
   fullscreen_button->signal_toggled().connect(SigC::slot(*this, &main_window_glade::on_fullscreen_button_toggled), false);
   quit_button->signal_clicked().connect(SigC::slot(*this, &main_window_glade::on_quit_button_clicked), false);
}

main_window_glade::~main_window_glade()
{  delete gmm_data;
}
